{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enverd\\\\Purwadhika\\\\FrontEnd\\\\bioskopticketing\\\\src\\\\pages\\\\loginPage.jsx\";\nimport React from 'react';\nimport Axios from 'axios';\nimport { connect } from 'react-redux';\nimport { logUser } from './../redux/actions/countActions';\nimport { logAdmin } from './../redux/actions/countActions';\nimport { Redirect } from 'react-router';\n\nclass loginPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userdata: [],\n      redirect: false\n    };\n\n    this.getLoginData = () => {\n      Axios.get('http://localhost:2000/users/').then(res => {\n        console.log(res.data);\n        this.setState({\n          userdata: res.data\n        }); // console.log(\"ini userdata state\", this.state.userdata)\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.validateUser = () => {\n      var userid = this.refs.userIdLog.value;\n      var userpass = this.refs.userPassLog.value;\n      var isvalid = false;\n      this.state.userdata.map(val => {\n        if (userid === val.username && userpass === val.password) {\n          // VALID\n          isvalid = true;\n\n          if (val.role == \"user\") {\n            return this.props.logUser(val.username);\n          } else if (val.role === \"admin\") {\n            return this.props.logAdmin(val.username);\n          } else {}\n        }\n      });\n\n      if (isvalid === false) {\n        // IS NOT VALID\n        window.alert(\"not valid\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getLoginData();\n  }\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"justify-content-center text-center \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"mb-5 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Log In \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Your Account \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control text-center mb-5\",\n      ref: \"userIdLog\",\n      placeholder: \"Enter Account Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Your Password \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control text-center mb-5\",\n      ref: \"userPassLog\",\n      placeholder: \"Enter Password Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      className: \"btn btn-success mb-5\",\n      onClick: () => this.validateUser(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.CURRENT_USER_DATA.currentUser,\n    IS_ADMIN: state.CURRENT_USER_DATA.IS_ADMIN,\n    IS_LOGGED_IN: state.CURRENT_USER_DATA.IS_LOGGED_IN\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logUser,\n  logAdmin\n})(loginPage);","map":{"version":3,"sources":["C:\\Users\\Enverd\\Purwadhika\\FrontEnd\\bioskopticketing\\src\\pages\\loginPage.jsx"],"names":["React","Axios","connect","logUser","logAdmin","Redirect","loginPage","Component","state","userdata","redirect","getLoginData","get","then","res","console","log","data","setState","catch","err","validateUser","userid","refs","userIdLog","value","userpass","userPassLog","isvalid","map","val","username","password","role","props","window","alert","componentDidMount","render","color","mapStateToProps","currentUser","CURRENT_USER_DATA","IS_ADMIN","IS_LOGGED_IN"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { logUser } from './../redux/actions/countActions'\r\nimport { logAdmin } from './../redux/actions/countActions'\r\nimport { Redirect } from 'react-router'\r\n \r\nclass loginPage extends React.Component{\r\n    state = {\r\n        userdata : [],\r\n        redirect : false\r\n    }\r\n    componentDidMount(){\r\n        this.getLoginData()\r\n    }\r\n    getLoginData = () => {\r\n    \r\n        Axios.get('http://localhost:2000/users/')\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                userdata : res.data\r\n            })\r\n            // console.log(\"ini userdata state\", this.state.userdata)\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    validateUser = () => {\r\n        var userid = this.refs.userIdLog.value\r\n        var userpass = this.refs.userPassLog.value\r\n        var isvalid = false\r\n\r\n        this.state.userdata.map((val) => {\r\n            if(userid === val.username && userpass === val.password){\r\n                // VALID\r\n                isvalid = true\r\n                if(val.role == \"user\"){\r\n                    return this.props.logUser(val.username)\r\n\r\n                }else if(val.role === \"admin\"){\r\n                    return this.props.logAdmin(val.username)\r\n\r\n                }else {\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n        if(isvalid === false){\r\n            // IS NOT VALID\r\n            window.alert(\"not valid\")\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { redirect } = this.state\r\n        if(redirect) {\r\n           return <Redirect to=\"/\" push={true} />\r\n        }\r\n        return (\r\n            <div>\r\n                <div className = 'justify-content-center text-center '>\r\n                <h1 className='mb-5 mt-5'> Log In </h1>\r\n                \r\n                <p> Your Account </p>\r\n                <input type=\"text\" className=\"form-control text-center mb-5\" ref=\"userIdLog\" placeholder=\"Enter Account Here\"/>\r\n                <p> Your Password </p>\r\n                <input type=\"password\" className=\"form-control text-center mb-5\" ref=\"userPassLog\" placeholder=\"Enter Password Here\"/>\r\n                <input type=\"button\" value=\"Submit\" className=\"btn btn-success mb-5\" onClick={() => this.validateUser()}/>\r\n                <p className=\"text-center\" style={{color : 'red'}}> </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       currentUser : state.CURRENT_USER_DATA.currentUser,\r\n       IS_ADMIN : state.CURRENT_USER_DATA.IS_ADMIN,\r\n       IS_LOGGED_IN : state.CURRENT_USER_DATA.IS_LOGGED_IN\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {logUser, logAdmin})(loginPage);"]},"metadata":{},"sourceType":"module"}