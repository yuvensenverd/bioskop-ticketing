{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enverd\\\\Purwadhika\\\\FrontEnd\\\\bioskopticketing\\\\src\\\\pages\\\\loginPage.jsx\";\nimport React from 'react';\nimport Axios from 'axios';\nimport { connect } from 'react-redux';\nimport { logUser } from './../redux/actions/countActions';\nimport { logAdmin } from './../redux/actions/countActions';\nimport { Redirect } from 'react-router';\nimport { Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nclass loginPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userdata: [],\n      redirect: false\n    };\n\n    this.validateUser = () => {\n      var userid = this.refs.userIdLog.value;\n      var userpass = this.refs.userPassLog.value;\n\n      if (userid.replace(/\\s/g, \"\") === \"\" || userpass.replace(/\\s/g, \"\") === \"\") {\n        window.alert(\"Semua form harus diisi\");\n      } else {\n        Axios.get('http://localhost:2000' + '/users?username=' + userid + '&password=' + userpass).then(res => {\n          if (res.data.length === 0) {\n            console.log(\"not valid\");\n            return window.alert(\"username / password is not valid\");\n          } else {\n            this.setState({\n              redirect: true // SUPAYA PINDAH PAGE\n\n            });\n\n            if (res.data[0].role === \"user\") {\n              console.log(res.data[0].saldo);\n              return this.props.logUser(userid);\n            } else if (res.data[0].role === \"admin\") {\n              console.log(res.data[0].saldo);\n              return this.props.logAdmin(userid);\n            }\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } // this.state.userdata.map((val) => {\n      //     if(userid === val.username && userpass === val.password){\n      //         // VALID\n      //         this.setState({\n      //             redirect : true // SUPAYA PINDAH PAGE\n      //         })\n      //         isvalid = true\n      //         if(val.role === \"user\"){\n      //             return this.props.logUser(val.username)\n      //         }else if(val.role === \"admin\"){\n      //             return this.props.logAdmin(val.username)\n      //         }else {\n      //         }\n      //     }\n      // })\n      // if(isvalid === false){\n      //     // IS NOT VALID\n      //     window.alert(\"not valid\")\n      // }\n\n    };\n  }\n\n  componentDidMount() {} // this.getLoginData()\n  // getSaldo = (userid) =>{\n  //     Axios.get('http://localhost:2000/users?username='+userid)\n  //         .then((res)=>{\n  //              return res.data[0].saldo\n  //         }) \n  //         .catch((err)=>{\n  //             return err\n  //         })\n  // }\n  // getLoginData = () => {\n  //     Axios.get('http://localhost:2000/users/')\n  //     .then((res) => {\n  //         console.log(res.data)\n  //         this.setState({\n  //             userdata : res.data\n  //         })\n  //         // console.log(\"ini userdata state\", this.state.userdata)\n  //     })\n  //     .catch((err) => {\n  //         console.log(err)\n  //     })\n  // }\n\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.IS_LOGGED_IN === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"mycontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"p-5 mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"userIdLog\",\n      className: \"form-control form-control-lg mt-3 mb-3\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      ref: \"userPassLog\",\n      className: \"form-control form-control-lg mt-3 mb-5\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"mb-5\",\n      style: {\n        color: \"red\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \"), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-outline-success btn-lg mt-3 mb-5\",\n      value: \"Submit\",\n      onClick: () => this.validateUser(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/pages/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-3\",\n      style: {\n        textDecoration: \"underline\",\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Dont Have an Account ? Sign in now \"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.CURRENT_USER_DATA.currentUser,\n    IS_ADMIN: state.CURRENT_USER_DATA.IS_ADMIN,\n    IS_LOGGED_IN: state.CURRENT_USER_DATA.IS_LOGGED_IN,\n    saldouser: state.CURRENT_USER_DATA.saldo\n  };\n}; // localhost:2000/users?username=enverd&&password=456456\n\n\nexport default connect(mapStateToProps, {\n  logUser,\n  logAdmin\n})(loginPage);","map":{"version":3,"sources":["C:\\Users\\Enverd\\Purwadhika\\FrontEnd\\bioskopticketing\\src\\pages\\loginPage.jsx"],"names":["React","Axios","connect","logUser","logAdmin","Redirect","Paper","Link","loginPage","Component","state","userdata","redirect","validateUser","userid","refs","userIdLog","value","userpass","userPassLog","replace","window","alert","get","then","res","data","length","console","log","setState","role","saldo","props","catch","err","componentDidMount","render","IS_LOGGED_IN","color","fontWeight","textDecoration","mapStateToProps","currentUser","CURRENT_USER_DATA","IS_ADMIN","saldouser"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { logUser } from './../redux/actions/countActions'\r\nimport { logAdmin } from './../redux/actions/countActions'\r\nimport { Redirect } from 'react-router'\r\nimport { Paper } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n \r\nclass loginPage extends React.Component{\r\n    state = {\r\n        userdata : [],\r\n        redirect : false\r\n    }\r\n    componentDidMount(){\r\n        // this.getLoginData()\r\n    }\r\n    // getSaldo = (userid) =>{\r\n    //     Axios.get('http://localhost:2000/users?username='+userid)\r\n    //         .then((res)=>{\r\n                \r\n            \r\n    //              return res.data[0].saldo\r\n                \r\n    //         }) \r\n    //         .catch((err)=>{\r\n    //             return err\r\n    //         })\r\n    // }\r\n    // getLoginData = () => {\r\n    \r\n    //     Axios.get('http://localhost:2000/users/')\r\n    //     .then((res) => {\r\n    //         console.log(res.data)\r\n    //         this.setState({\r\n    //             userdata : res.data\r\n    //         })\r\n    //         // console.log(\"ini userdata state\", this.state.userdata)\r\n            \r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n\r\n    validateUser = () => {\r\n        var userid = this.refs.userIdLog.value\r\n        var userpass = this.refs.userPassLog.value\r\n      \r\n        if(userid.replace(/\\s/g, \"\") === \"\" || userpass.replace(/\\s/g, \"\") === \"\"){\r\n            window.alert(\"Semua form harus diisi\")\r\n        }else{\r\n            Axios.get('http://localhost:2000' + '/users?username=' + userid + '&password=' + userpass)\r\n            .then((res)=> {\r\n                if(res.data.length === 0){\r\n                    console.log(\"not valid\")\r\n                    return window.alert(\"username / password is not valid\")\r\n                }else {\r\n                    this.setState({\r\n                        redirect : true // SUPAYA PINDAH PAGE\r\n                    })\r\n                   \r\n                    if(res.data[0].role === \"user\"){\r\n                        console.log(res.data[0].saldo)\r\n                        return this.props.logUser(userid)\r\n                    }else if(res.data[0].role === \"admin\"){\r\n\r\n                        console.log(res.data[0].saldo)\r\n                        return this.props.logAdmin(userid)\r\n                    }\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n        // this.state.userdata.map((val) => {\r\n        //     if(userid === val.username && userpass === val.password){\r\n        //         // VALID\r\n        //         this.setState({\r\n        //             redirect : true // SUPAYA PINDAH PAGE\r\n        //         })\r\n        //         isvalid = true\r\n        //         if(val.role === \"user\"){\r\n                    \r\n        //             return this.props.logUser(val.username)\r\n\r\n        //         }else if(val.role === \"admin\"){\r\n                   \r\n        //             return this.props.logAdmin(val.username)\r\n\r\n        //         }else {\r\n\r\n        //         }\r\n        //     }\r\n        // })\r\n\r\n        // if(isvalid === false){\r\n        //     // IS NOT VALID\r\n        //     window.alert(\"not valid\")\r\n        // }\r\n\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n        \r\n        const { redirect } = this.state\r\n        if(redirect) {\r\n           return <Redirect to=\"/\" push={true} />\r\n        }\r\n        if(this.props.IS_LOGGED_IN === true){\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            \r\n            <div className=\"mycontainer\">\r\n                \r\n                <div className='row justify-content-center mt-5'>\r\n                    <div className=\"col-md-8\">\r\n                        <Paper className=\"p-5 mt-5\">\r\n                            <h1 className=\"mb-5\">Log In</h1>\r\n                            <input type=\"text\" ref=\"userIdLog\" className=\"form-control form-control-lg mt-3 mb-3\" placeholder=\"username\"></input>\r\n                            <input type=\"password\" ref=\"userPassLog\" className=\"form-control form-control-lg mt-3 mb-5\" placeholder=\"password\"></input>\r\n                            \r\n                            <p className=\"mb-5\" style={{color : \"red\", fontWeight : \"bolder\"}}> </p>\r\n                            <input type=\"button\" className=\"btn btn-outline-success btn-lg mt-3 mb-5\" value=\"Submit\" onClick={() => this.validateUser()}></input>\r\n                            <Link to='/pages/register'>\r\n                            <p className=\"mb-3\" style={{textDecoration : \"underline\", color : \"black\"}}>Dont Have an Account ? Sign in now </p>\r\n                            </Link>\r\n \r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       currentUser : state.CURRENT_USER_DATA.currentUser,\r\n       IS_ADMIN : state.CURRENT_USER_DATA.IS_ADMIN,\r\n       IS_LOGGED_IN : state.CURRENT_USER_DATA.IS_LOGGED_IN,\r\n       saldouser : state.CURRENT_USER_DATA.saldo\r\n       \r\n    }\r\n}\r\n \r\n// localhost:2000/users?username=enverd&&password=456456\r\n\r\nexport default connect(mapStateToProps, {logUser, logAdmin})(loginPage);"]},"metadata":{},"sourceType":"module"}