{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enverd\\\\Purwadhika\\\\FrontEnd\\\\bioskopticketing\\\\src\\\\pages\\\\historyTransaction.jsx\";\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport numeral from 'numeral';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass HistoryTransaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userdata: [],\n      movielist: [],\n      err: \"\",\n      modalOpen: false,\n      currentIndex: 0,\n      Loading: true,\n      grandtotal: 0\n    };\n\n    this.printTotal = arr => {\n      //[{},{}]\n      var total = 0;\n\n      for (var i = 0; i < arr.length; i++) {\n        total = total + arr[i].totalprice;\n      }\n\n      this.setState({\n        grandtotal: grandtotal + total\n      });\n      return total;\n    };\n\n    this.printDetail = index => {\n      this.setState({\n        modalOpen: true,\n        currentIndex: index\n      });\n    };\n\n    this.printhistory = () => {\n      console.log(this.state.userdata);\n\n      if (this.state.userdata.length !== 0) {\n        var jsx = this.state.userdata.map((val, index) => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, index + 1), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, this.state.userdata[index][0].date), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, this.state.userdata[index].length), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, this.printTotal(this.state.userdata[index])), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"button\",\n            value: \"detail\",\n            className: \"btn btn-md btn-info\",\n            onClick: () => this.printDetail(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          })));\n        });\n        return jsx;\n      } else {}\n    };\n\n    this.mapTotal = () => {\n      var total = 0;\n      this.state.userdata.map(val => {\n        total = total + val.totalprice;\n      });\n      return total;\n    };\n\n    this.printModal = i => {\n      if (this.state.Loading === false) {\n        console.log(this.state.userdata);\n        var output = this.state.userdata[i].map((val, index) => {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, index + 1), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, val.movtitle), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, val.seat.join(\", \") + \" (Total \" + val.seat.length + \" Ticket)\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, val.totalprice));\n        });\n        return output;\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:2000/users?username=' + this.props.currentUser).then(res => {\n      var history = res.data[0].transaction;\n      this.setState({\n        userdata: history\n      });\n\n      if (this.state.userdata.length === 0) {\n        this.setState({\n          err: \"You have no transaction yet !\"\n        });\n      }\n\n      console.log(this.state.userdata);\n      this.setState({\n        Loading: false\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // Axios.get('http://localhost:2000/movies')\n    // .then((res)=>{\n    //   var listorder =  res.data.sort((a,b)=>{\n    //         return (a.id) - (b.id)\n    //     }) // SORT ASCENDING\n    //     var arr = []\n    //     listorder.map((val)=>{\n    //         arr.push(val.title)\n    //     })\n    //     this.setState({\n    //         movielist : arr\n    //     })\n    // })\n    // .catch((err)=>{\n    //     console.log(err)\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modalOpen,\n      size: \"lg\",\n      style: {\n        maxWidth: '1200px',\n        width: '80%'\n      },\n      toggle: () => this.setState({\n        modalOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"YOUR TRANSACTION DETAILS\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Table, {\n      light: true,\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"font-weight-bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"No\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Subtotal\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.printModal(this.state.currentIndex))), React.createElement(\"p\", {\n      id: \"warningbutton\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" \"))), React.createElement(\"div\", {\n      className: \"mycontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-light text-center mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" Your Transaction History\"), React.createElement(Table, {\n      dark: true,\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"filtercss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"No\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Tanggal\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Jumlah Items (Movie)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Total Price\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Detail\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.printhistory(), React.createElement(\"tr\", {\n      className: \"filtercss text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Total Money Spent : \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Rp \" + numeral(this.state.grandtotal).format(0, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })))), this.state.err === '' ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : this.state.err !== '' ? React.createElement(\"div\", {\n      className: \"alert alert-black filtercss text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" \", this.state.err, \" \", React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bolder\",\n        cursor: 'pointer',\n        float: \"right\",\n        height: \"150px\"\n      },\n      onClick: () => {\n        this.setState({\n          err: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" X\")) : null), \")\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.CURRENT_USER_DATA.currentUser,\n    IS_ADMIN: state.CURRENT_USER_DATA.IS_ADMIN,\n    IS_LOGGED_IN: state.CURRENT_USER_DATA.IS_LOGGED_IN\n  };\n};\n\nexport default connect(mapStateToProps)(HistoryTransaction);","map":{"version":3,"sources":["C:\\Users\\Enverd\\Purwadhika\\FrontEnd\\bioskopticketing\\src\\pages\\historyTransaction.jsx"],"names":["React","Table","Axios","Link","connect","numeral","Modal","ModalHeader","ModalBody","ModalFooter","HistoryTransaction","Component","state","userdata","movielist","err","modalOpen","currentIndex","Loading","grandtotal","printTotal","arr","total","i","length","totalprice","setState","printDetail","index","printhistory","console","log","jsx","map","val","date","mapTotal","printModal","output","movtitle","seat","join","componentDidMount","get","props","currentUser","then","res","history","data","transaction","catch","render","maxWidth","width","color","format","fontWeight","cursor","float","height","mapStateToProps","CURRENT_USER_DATA","IS_ADMIN","IS_LOGGED_IN"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport Axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport numeral from 'numeral'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n\r\nclass HistoryTransaction extends React.Component{\r\n    state = {\r\n        userdata : [],\r\n        movielist : [],\r\n        err : \"\",\r\n        modalOpen : false,\r\n        currentIndex : 0,\r\n        Loading : true,\r\n        grandtotal :0\r\n    }\r\n    componentDidMount(){\r\n        Axios.get('http://localhost:2000/users?username='+ this.props.currentUser)\r\n        .then((res)=>{\r\n            var history  = res.data[0].transaction\r\n            this.setState({\r\n                userdata : history\r\n            })\r\n            if(this.state.userdata.length === 0){\r\n                this.setState({\r\n                    err : \"You have no transaction yet !\"\r\n                })\r\n            }\r\n            console.log(this.state.userdata)\r\n            this.setState({\r\n                Loading : false\r\n            })\r\n            \r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n\r\n        // Axios.get('http://localhost:2000/movies')\r\n        // .then((res)=>{\r\n        //   var listorder =  res.data.sort((a,b)=>{\r\n        //         return (a.id) - (b.id)\r\n        //     }) // SORT ASCENDING\r\n         \r\n        //     var arr = []\r\n        //     listorder.map((val)=>{\r\n        //         arr.push(val.title)\r\n        //     })\r\n        //     this.setState({\r\n        //         movielist : arr\r\n        //     })\r\n            \r\n\r\n        // })\r\n        // .catch((err)=>{\r\n        //     console.log(err)\r\n        // })\r\n        \r\n       \r\n    }\r\n    printTotal =(arr) => {\r\n        //[{},{}]\r\n        var total = 0 \r\n        for(var i =0; i<arr.length; i++){\r\n            total = total + arr[i].totalprice\r\n        }\r\n        this.setState({\r\n            grandtotal : grandtotal + total\r\n        })\r\n        return total\r\n    }\r\n\r\n    printDetail =(index)=>{\r\n        this.setState({\r\n            modalOpen : true,\r\n            currentIndex : index\r\n        })\r\n    }\r\n\r\n    printhistory = () =>{\r\n        console.log(this.state.userdata)\r\n        if(this.state.userdata.length !== 0){\r\n            \r\n            var jsx = this.state.userdata.map((val,index)=> {\r\n                return(\r\n                    <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{this.state.userdata[index][0].date}</td>\r\n                        <td>{this.state.userdata[index].length}</td>\r\n                        <td>{this.printTotal(this.state.userdata[index])}</td>\r\n                        <td><input type=\"button\" value=\"detail\" className=\"btn btn-md btn-info\" onClick={()=>this.printDetail(index)}></input></td>\r\n                    </tr>\r\n                )\r\n            })\r\n            return jsx\r\n        }else {\r\n            \r\n           \r\n                \r\n        }\r\n        \r\n    }\r\n\r\n    mapTotal = () =>{\r\n        var total = 0\r\n        this.state.userdata.map((val)=>{\r\n            total = total + val.totalprice\r\n        })\r\n        return total\r\n    }\r\n\r\n    printModal = (i) => {\r\n        if(this.state.Loading === false){\r\n\r\n            console.log(this.state.userdata)\r\n            var output = this.state.userdata[i].map((val,index)=>{\r\n                return (\r\n                    <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{val.movtitle}</td>\r\n                        <td>{val.seat.join(\", \") + \" (Total \" + val.seat.length + \" Ticket)\"}</td>\r\n                        <td>{val.totalprice}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            return output\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <Modal isOpen={this.state.modalOpen} size=\"lg\" style={{maxWidth: '1200px', width: '80%'}} toggle={()=> this.setState({modalOpen : false})}>\r\n                        <ModalHeader>\r\n                            YOUR TRANSACTION DETAILS\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        <Table light className=\"mt-3\">\r\n             \r\n                                <thead>\r\n                                    <tr className=\"font-weight-bolder\">\r\n                                        <td>No</td>\r\n                                        <td>Title</td>\r\n                                        <td>Qty</td>\r\n                                        <td>Subtotal</td>\r\n                                    \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.printModal(this.state.currentIndex)}\r\n                                </tbody>\r\n                        </Table>\r\n                            \r\n                            <p id=\"warningbutton\" style={{color : \"red\"}}> </p>\r\n                        </ModalBody>\r\n                        \r\n                    </Modal>\r\n            \r\n            <div className=\"mycontainer\">\r\n                <h1 className=\"text-light text-center mt-5\"> Your Transaction History</h1>\r\n               <Table dark className=\"mt-3\">\r\n             \r\n                   <thead>\r\n                        <tr className=\"filtercss\">\r\n                            <td>No</td>\r\n                            <td>Tanggal</td>\r\n                            <td>Jumlah Items (Movie)</td>\r\n                            <td>Total Price</td>\r\n                            <td>Detail</td>\r\n                        </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                        \r\n                        {this.printhistory()}\r\n                        <tr className=\"filtercss text-success\"> \r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>Total Money Spent : </td>\r\n                                <td>{\"Rp \" + numeral(this.state.grandtotal).format(0,0)}</td>\r\n                                <td></td>\r\n                     </tr>\r\n                        \r\n                   </tbody>\r\n                   \r\n                   \r\n               </Table>\r\n               {\r\n                            this.state.err === '' \r\n                            ?\r\n                            <p></p>\r\n                            :\r\n                            this.state.err !== ''\r\n                            ?\r\n                            <div className='alert alert-black filtercss text-center'> {this.state.err} <span style={{fontWeight : \"bolder\", cursor : 'pointer', float : \"right\", height : \"150px\"}} onClick={()=>{this.setState({err : \"\"})}}> X</span></div>\r\n                            :\r\n                            null}\r\n                \r\n               \r\n               </div>\r\n           \r\n        \r\n    )\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       currentUser : state.CURRENT_USER_DATA.currentUser,\r\n       IS_ADMIN : state.CURRENT_USER_DATA.IS_ADMIN,\r\n       IS_LOGGED_IN : state.CURRENT_USER_DATA.IS_LOGGED_IN\r\n       \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HistoryTransaction);"]},"metadata":{},"sourceType":"module"}